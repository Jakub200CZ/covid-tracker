{"remainingRequest":"/Users/jakub/Desktop/Dev/covid-tracker/node_modules/thread-loader/dist/cjs.js!/Users/jakub/Desktop/Dev/covid-tracker/node_modules/babel-loader/lib/index.js!/Users/jakub/Desktop/Dev/covid-tracker/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jakub/Desktop/Dev/covid-tracker/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/jakub/Desktop/Dev/covid-tracker/src/views/Home.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/jakub/Desktop/Dev/covid-tracker/src/views/Home.vue","mtime":1633891267168},{"path":"/Users/jakub/Desktop/Dev/covid-tracker/node_modules/cache-loader/dist/cjs.js","mtime":1633879594556},{"path":"/Users/jakub/Desktop/Dev/covid-tracker/node_modules/thread-loader/dist/cjs.js","mtime":1633879594566},{"path":"/Users/jakub/Desktop/Dev/covid-tracker/node_modules/babel-loader/lib/index.js","mtime":1633879594566},{"path":"/Users/jakub/Desktop/Dev/covid-tracker/node_modules/cache-loader/dist/cjs.js","mtime":1633879594556},{"path":"/Users/jakub/Desktop/Dev/covid-tracker/node_modules/vue-loader-v16/dist/index.js","mtime":1633879604047}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9qYWt1Yi9EZXNrdG9wL0Rldi9jb3ZpZC10cmFja2VyL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0IERhdGFUaXRsZSBmcm9tICdAL2NvbXBvbmVudHMvRGF0YVRpdGxlJzsKaW1wb3J0IERhdGFCb3hlcyBmcm9tICdAL2NvbXBvbmVudHMvRGF0YUJveGVzJzsKaW1wb3J0IENvdW50cnlTZWxlY3QgZnJvbSAnQC9jb21wb25lbnRzL0NvdW50cnlTZWxlY3QnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0hvbWUnLAogIGNvbXBvbmVudHM6IHsKICAgIERhdGFUaXRsZTogRGF0YVRpdGxlLAogICAgRGF0YUJveGVzOiBEYXRhQm94ZXMsCiAgICBDb3VudHJ5U2VsZWN0OiBDb3VudHJ5U2VsZWN0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgdGl0bGU6ICdHbG9iYWwnLAogICAgICBkYXRhRGF0ZTogJycsCiAgICAgIHN0YXR1czoge30sCiAgICAgIGNvdW50cmllczogW10sCiAgICAgIGxvYWRpbmdJbWFnZTogcmVxdWlyZSgnLi4vYXNzZXRzL2xvYWRpbmcuZ2lmJykKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBmZXRjaENvdmlkRGF0YTogZnVuY3Rpb24gZmV0Y2hDb3ZpZERhdGEoKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHJlcywgZGF0YTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgnaHR0cHM6Ly9hcGkuY292aWQxOWFwaS5jb20vc3VtbWFyeScpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBkYXRhKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGdldENvdW50cnlEYXRhOiBmdW5jdGlvbiBnZXRDb3VudHJ5RGF0YShjb3VudHJ5KSB7CiAgICAgIHRoaXMuc3RhdHMgPSBjb3VudHJ5OwogICAgICB0aGlzLnRpdGxlID0gY291bnRyeS5Db3VudHJ5OwogICAgfSwKICAgIGNsZWFyQ291bnRyeURhdGE6IGZ1bmN0aW9uIGNsZWFyQ291bnRyeURhdGEoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgZGF0YTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXMubG9hZGluZyA9IHRydWU7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuZmV0Y2hDb3ZpZERhdGEoKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgX3RoaXMudGl0bGUgPSAnR2xvYmFsJzsKICAgICAgICAgICAgICAgIF90aGlzLnN0YXRzID0gZGF0YS5HbG9iYWw7CiAgICAgICAgICAgICAgICBfdGhpcy5sb2FkaW5nID0gZmFsc2U7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICB2YXIgZGF0YTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi5mZXRjaENvdmlkRGF0YSgpOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGRhdGEgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICBfdGhpczIuZGF0YURhdGUgPSBkYXRhLkRhdGU7CiAgICAgICAgICAgICAgX3RoaXMyLnN0YXRzID0gZGF0YS5HbG9iYWw7CiAgICAgICAgICAgICAgX3RoaXMyLmNvdW50cmllcyA9IGRhdGEuQ291bnRyaWVzOwogICAgICAgICAgICAgIF90aGlzMi5sb2FkaW5nID0gZmFsc2U7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMyk7CiAgICB9KSkoKTsKICB9Cn07"},{"version":3,"sources":["/Users/jakub/Desktop/Dev/covid-tracker/src/views/Home.vue"],"names":[],"mappings":";;;AAqBA,OAAO,SAAP,MAAsB,wBAAtB;AACA,OAAO,SAAP,MAAsB,wBAAtB;AACA,OAAO,aAAP,MAA0B,4BAA1B;AAEA,eAAe;AACb,EAAA,IAAI,EAAE,MADO;AAEb,EAAA,UAAU,EAAE;AACV,IAAA,SAAS,EAAT,SADU;AAEV,IAAA,SAAS,EAAT,SAFU;AAGV,IAAA,aAAY,EAAZ;AAHU,GAFC;AAOb,EAAA,IAPa,kBAON;AACL,WAAO;AACL,MAAA,OAAO,EAAE,IADJ;AAEL,MAAA,KAAK,EAAE,QAFF;AAGL,MAAA,QAAQ,EAAE,EAHL;AAIL,MAAA,MAAM,EAAE,EAJH;AAKL,MAAA,SAAS,EAAE,EALN;AAML,MAAA,YAAY,EAAE,OAAO,CAAC,uBAAD;AANhB,KAAP;AAQD,GAhBY;AAiBb,EAAA,OAAO,EAAE;AACD,IAAA,cADC,4BACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACH,KAAK,CAAC,oCAAD,CADF;;AAAA;AACf,gBAAA,GADe;AAAA;AAAA,uBAEF,GAAG,CAAC,IAAJ,EAFE;;AAAA;AAEf,gBAAA,IAFe;AAAA,iDAId,IAJc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKtB,KANM;AAOP,IAAA,cAPO,0BAOQ,OAPR,EAOiB;AACtB,WAAK,KAAL,GAAa,OAAb;AACA,WAAK,KAAL,GAAa,OAAO,CAAC,OAArB;AACD,KAVM;AAWD,IAAA,gBAXC,8BAWkB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACvB,gBAAA,KAAI,CAAC,OAAL,GAAe,IAAf;AADuB;AAAA,uBAEJ,KAAI,CAAC,cAAL,EAFI;;AAAA;AAEjB,gBAAA,IAFiB;AAGvB,gBAAA,KAAI,CAAC,KAAL,GAAa,QAAb;AACA,gBAAA,KAAI,CAAC,KAAL,GAAa,IAAI,CAAC,MAAlB;AACA,gBAAA,KAAI,CAAC,OAAL,GAAe,KAAf;;AALuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMzB;AAjBO,GAjBI;AAoCP,EAAA,OApCO,qBAoCG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACK,MAAI,CAAC,cAAL,EADL;;AAAA;AACR,cAAA,IADQ;AAGd,cAAA,MAAI,CAAC,QAAL,GAAgB,IAAI,CAAC,IAArB;AACA,cAAA,MAAI,CAAC,KAAL,GAAa,IAAI,CAAC,MAAlB;AACA,cAAA,MAAI,CAAC,SAAL,GAAiB,IAAI,CAAC,SAAtB;AACA,cAAA,MAAI,CAAC,OAAL,GAAe,KAAf;;AANc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOhB;AA3Ca,CAAf","sourcesContent":["<template>\n  <main v-if=\"!loading\">\n    <DataTitle :text=\"title\" :dataDate=\"dataDate\"/>\n\n    <CountrySelect @get-country=\"getCountryData\" :countries=\"countries\" />\n\n    <DataBoxes :stats=\"stats\" />\n\n    <button @click=\"clearCountryData\" v-if=\"stats.Country\" class=\"rounded-lg bg-indigo-600 text-white px-4 py-3 font-semibold text-lg leading-tight shadow-md hover:bg-indigo-700 transition duration-150 mt-3 align-center\"> Clear Country </button>\n  </main>\n\n  <main class=\"flex flex-col align-center justify-center text-center\" v-else>\n    <div class=\"text-gray-500 text-3xl mt-10 mb-6\">\n      Fetching Data\n    </div>\n    <img :src=\"loadingImage\" alt=\"\" class=\"w-24 m-auto\" />\n  </main>\n\n</template>\n\n<script>\nimport DataTitle from '@/components/DataTitle'\nimport DataBoxes from '@/components/DataBoxes'\nimport CountrySelect from '@/components/CountrySelect'\n\nexport default {\n  name: 'Home',\n  components: {\n    DataTitle,\n    DataBoxes,\n    CountrySelect\n  },\n  data() {\n    return {\n      loading: true,\n      title: 'Global',\n      dataDate: '',\n      status: {},\n      countries: [],\n      loadingImage: require('../assets/loading.gif'),\n    }\n  },\n  methods: {\n    async fetchCovidData() {\n      const res = await fetch('https://api.covid19api.com/summary')\n      const data = await res.json()\n\n      return data\n    },\n    getCountryData(country) {\n      this.stats = country\n      this.title = country.Country\n    },\n    async clearCountryData() {\n      this.loading = true\n      const data = await this.fetchCovidData()\n      this.title = 'Global'\n      this.stats = data.Global\n      this.loading = false\n    }\n  },\n  async created() {\n    const data = await this.fetchCovidData()\n\n    this.dataDate = data.Date\n    this.stats = data.Global\n    this.countries = data.Countries\n    this.loading = false\n  }\n}\n</script>\n"],"sourceRoot":""}]}