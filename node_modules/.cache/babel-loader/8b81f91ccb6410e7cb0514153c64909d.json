{"remainingRequest":"/Users/jakub/Desktop/Dev/covid-tracker/node_modules/thread-loader/dist/cjs.js!/Users/jakub/Desktop/Dev/covid-tracker/node_modules/babel-loader/lib/index.js!/Users/jakub/Desktop/Dev/covid-tracker/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/jakub/Desktop/Dev/covid-tracker/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jakub/Desktop/Dev/covid-tracker/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/jakub/Desktop/Dev/covid-tracker/src/components/CountrySelect.vue?vue&type=template&id=2c3bd740","dependencies":[{"path":"/Users/jakub/Desktop/Dev/covid-tracker/src/components/CountrySelect.vue","mtime":1633889630789},{"path":"/Users/jakub/Desktop/Dev/covid-tracker/node_modules/cache-loader/dist/cjs.js","mtime":1633879594556},{"path":"/Users/jakub/Desktop/Dev/covid-tracker/node_modules/thread-loader/dist/cjs.js","mtime":1633879594566},{"path":"/Users/jakub/Desktop/Dev/covid-tracker/node_modules/babel-loader/lib/index.js","mtime":1633879594566},{"path":"/Users/jakub/Desktop/Dev/covid-tracker/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1633879604047},{"path":"/Users/jakub/Desktop/Dev/covid-tracker/node_modules/cache-loader/dist/cjs.js","mtime":1633879594556},{"path":"/Users/jakub/Desktop/Dev/covid-tracker/node_modules/vue-loader-v16/dist/index.js","mtime":1633879604047}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIHJlbmRlckxpc3QgYXMgX3JlbmRlckxpc3QsIEZyYWdtZW50IGFzIF9GcmFnbWVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrLCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgdk1vZGVsU2VsZWN0IGFzIF92TW9kZWxTZWxlY3QsIHdpdGhEaXJlY3RpdmVzIGFzIF93aXRoRGlyZWN0aXZlcyB9IGZyb20gInZ1ZSI7Cgp2YXIgX2hvaXN0ZWRfMSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJvcHRpb24iLCB7CiAgdmFsdWU6ICIwIgp9LCAiIFNlbGVjdCBDb3VudHJ5IiwgLTEpOwoKdmFyIF9ob2lzdGVkXzIgPSBbInZhbHVlIl07CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgcmV0dXJuIF93aXRoRGlyZWN0aXZlcygoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJzZWxlY3QiLCB7CiAgICBvbkNoYW5nZTogX2NhY2hlWzBdIHx8IChfY2FjaGVbMF0gPSBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5vbkNoYW5nZSgpOwogICAgfSksCiAgICAib25VcGRhdGU6bW9kZWxWYWx1ZSI6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJGRhdGEuc2VsZWN0ZWQgPSAkZXZlbnQ7CiAgICB9KSwKICAgIGNsYXNzOiAiZm9ybS1zZWxlY3QgbXQtMTAgbWItMyBibG9jayB3LWZ1bGwgYm9yZGVyIHAtMyByb3VuZGVkIgogIH0sIFtfaG9pc3RlZF8xLCAoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUVsZW1lbnRCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KCRwcm9wcy5jb3VudHJpZXMsIGZ1bmN0aW9uIChjb3VudHJ5KSB7CiAgICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJvcHRpb24iLCB7CiAgICAgIHZhbHVlOiBjb3VudHJ5LklECiAgICB9LCBfdG9EaXNwbGF5U3RyaW5nKGNvdW50cnkuQ291bnRyeSksIDksIF9ob2lzdGVkXzIpOwogIH0pLCAyNTYpKV0sIDU0NCkpLCBbW192TW9kZWxTZWxlY3QsICRkYXRhLnNlbGVjdGVkXV0pOwp9"},{"version":3,"sources":["/Users/jakub/Desktop/Dev/covid-tracker/src/components/CountrySelect.vue"],"names":[],"mappings":";;8BAEQ,mBAAA,CAA0C,QAA1C,EAA0C;AAAlC,EAAA,KAAK,EAAC;AAA4B,CAA1C,EAAkB,iBAAlB,EAAiC,CAAA,CAAjC,C;;;;wCADJ,mBAAA,CAKS,QALT,EAKS;AALA,IAAA,QAAM,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,QAAA,CAAA,QAAA,EAAF;AAAA,KAAA,CAKN;;aAL6B,KAAA,CAAA,Q,GAAQ,M;MAKrC;AALuC,IAAA,KAAK,EAAC;AAK7C,GALT,E,CACI,U,qBACJ,mBAAA,CAES,SAFT,EAES,IAFT,EAES,WAAA,CAFiB,MAAA,CAAA,SAEjB,EAF0B,UAApB,OAAoB,EAAb;yBAAtB,mBAAA,CAES,QAFT,EAES;AAF6B,MAAA,KAAK,EAAE,OAAO,CAAC;AAE5C,KAFT,E,iBACK,OAAO,CAAC,O,CADb,EACoB,CADpB,EACoB,UADpB,C;GAES,CAFT,E,GAAA,C,EAFA,E,GAAA,C,oBAAsC,KAAA,CAAA,Q","sourcesContent":["<template>\n    <select @change=\"onChange()\" v-model=\"selected\" class=\"form-select mt-10 mb-3 block w-full border p-3 rounded\">\n        <option value=\"0\"> Select Country</option>\n    <option v-for=\"country in countries\" :value=\"country.ID\">\n      {{ country.Country }}\n    </option>\n    </select>\n</template>\n\n<script>\nexport default {\n    name: 'CountrySelect',\n    props: ['countries'],\n    data() {\n        return {\n            selected: 0\n        }\n    },\n    methods: {\n        onChange() {\n            const country = this.countries.find((item) => item.ID === this.selected)\n\n            this.$emit('get-country', country)\n        }\n    },\n}\n</script>"],"sourceRoot":""}]}