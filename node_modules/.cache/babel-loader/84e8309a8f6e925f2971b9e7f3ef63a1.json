{"remainingRequest":"/Users/jakub/Desktop/Dev/covid-tracker/node_modules/babel-loader/lib/index.js!/Users/jakub/Desktop/Dev/covid-tracker/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/jakub/Desktop/Dev/covid-tracker/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jakub/Desktop/Dev/covid-tracker/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/jakub/Desktop/Dev/covid-tracker/src/components/DataBoxes.vue?vue&type=template&id=979232a2","dependencies":[{"path":"/Users/jakub/Desktop/Dev/covid-tracker/src/components/DataBoxes.vue","mtime":1633891287915},{"path":"/Users/jakub/Desktop/Dev/covid-tracker/node_modules/cache-loader/dist/cjs.js","mtime":1633879594556},{"path":"/Users/jakub/Desktop/Dev/covid-tracker/node_modules/babel-loader/lib/index.js","mtime":1633879594566},{"path":"/Users/jakub/Desktop/Dev/covid-tracker/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1633879604047},{"path":"/Users/jakub/Desktop/Dev/covid-tracker/node_modules/cache-loader/dist/cjs.js","mtime":1633879594556},{"path":"/Users/jakub/Desktop/Dev/covid-tracker/node_modules/vue-loader-v16/dist/index.js","mtime":1633879604047}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUsIGNyZWF0ZUVsZW1lbnRWTm9kZSBhcyBfY3JlYXRlRWxlbWVudFZOb2RlLCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgY3JlYXRlVGV4dFZOb2RlIGFzIF9jcmVhdGVUZXh0Vk5vZGUsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVFbGVtZW50QmxvY2sgYXMgX2NyZWF0ZUVsZW1lbnRCbG9jayB9IGZyb20gInZ1ZSI7CnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAiZ3JpZCBtZDpncmlkLWNvbHMtMiBnYXAtNCIKfTsKdmFyIF9ob2lzdGVkXzIgPSB7CiAgY2xhc3M6ICJzaGFkb3ctbWQgYmctaW5kaWdvLTIwMCBwLTEwIHRleHQtY2VudGVyIHJvdW5kZWQteGwiCn07Cgp2YXIgX2hvaXN0ZWRfMyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJoMyIsIHsKICBjbGFzczogInRleHQtM3hsIHRleHQtYmx1ZS05MDAgZm9udC1ib2xkIG1iLTQiCn0sICIgQ2FzZXMgIiwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzQgPSB7CiAgY2xhc3M6ICJ0ZXh0LTJ4bCBtYi00Igp9OwoKdmFyIF9ob2lzdGVkXzUgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgic3BhbiIsIHsKICBjbGFzczogImZvbnQtYm9sZCIKfSwgIiBOZXc6ICIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF82ID0gewogIGNsYXNzOiAidGV4dC0yeGwgbWItNCIKfTsKCnZhciBfaG9pc3RlZF83ID0gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInNwYW4iLCB7CiAgY2xhc3M6ICJmb250LWJvbGQiCn0sICIgVG90YWw6ICIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF84ID0gewogIGNsYXNzOiAic2hhZG93LW1kIGJnLWluZGlnby0zMDAgcC0xMCB0ZXh0LWNlbnRlciByb3VuZGVkLXhsIgp9OwoKdmFyIF9ob2lzdGVkXzkgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaDMiLCB7CiAgY2xhc3M6ICJ0ZXh0LTN4bCB0ZXh0LWJsdWUtOTAwIGZvbnQtYm9sZCBtYi00Igp9LCAiIERlYXRocyAiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMTAgPSB7CiAgY2xhc3M6ICJ0ZXh0LTJ4bCBtYi00Igp9OwoKdmFyIF9ob2lzdGVkXzExID0gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInNwYW4iLCB7CiAgY2xhc3M6ICJmb250LWJvbGQiCn0sICIgTmV3OiAiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMTIgPSB7CiAgY2xhc3M6ICJ0ZXh0LTJ4bCBtYi00Igp9OwoKdmFyIF9ob2lzdGVkXzEzID0gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInNwYW4iLCB7CiAgY2xhc3M6ICJmb250LWJvbGQiCn0sICIgVG90YWw6ICIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMSwgW19jcmVhdGVDb21tZW50Vk5vZGUoIiBCT1ggMSAiKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMiwgW19ob2lzdGVkXzMsIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzQsIFtfaG9pc3RlZF81LCBfY3JlYXRlVGV4dFZOb2RlKCIgIiArIF90b0Rpc3BsYXlTdHJpbmcoJG9wdGlvbnMubnVtYmVyV2l0aENvbW1hcygkcHJvcHMuc3RhdHMuTmV3Q29uZmlybWVkKSksIDEKICAvKiBURVhUICovCiAgKV0pLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF82LCBbX2hvaXN0ZWRfNywgX2NyZWF0ZVRleHRWTm9kZSgiICIgKyBfdG9EaXNwbGF5U3RyaW5nKCRvcHRpb25zLm51bWJlcldpdGhDb21tYXMoJHByb3BzLnN0YXRzLlRvdGFsQ29uZmlybWVkKSksIDEKICAvKiBURVhUICovCiAgKV0pXSksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiBCT1ggMiAiKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfOCwgW19ob2lzdGVkXzksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzEwLCBbX2hvaXN0ZWRfMTEsIF9jcmVhdGVUZXh0Vk5vZGUoIiAiICsgX3RvRGlzcGxheVN0cmluZygkb3B0aW9ucy5udW1iZXJXaXRoQ29tbWFzKCRwcm9wcy5zdGF0cy5OZXdEZWF0aHMpKSwgMQogIC8qIFRFWFQgKi8KICApXSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzEyLCBbX2hvaXN0ZWRfMTMsIF9jcmVhdGVUZXh0Vk5vZGUoIiAiICsgX3RvRGlzcGxheVN0cmluZygkb3B0aW9ucy5udW1iZXJXaXRoQ29tbWFzKCRwcm9wcy5zdGF0cy5Ub3RhbERlYXRocykpLCAxCiAgLyogVEVYVCAqLwogICldKV0pXSk7Cn0="},{"version":3,"sources":["/Users/jakub/Desktop/Dev/covid-tracker/src/components/DataBoxes.vue"],"names":[],"mappings":";;AACS,EAAA,KAAK,EAAC;;;AAGF,EAAA,KAAK,EAAC;;;8BACP,mBAAA,CAA8D,IAA9D,EAA8D;AAA1D,EAAA,KAAK,EAAC;AAAoD,CAA9D,EAAkD,SAAlD,EAAyD,CAAA;AAAA;AAAzD,C;;;AAEK,EAAA,KAAK,EAAC;;;8BACP,mBAAA,CAAqC,MAArC,EAAqC;AAA/B,EAAA,KAAK,EAAC;AAAyB,CAArC,EAAwB,QAAxB,EAA8B,CAAA;AAAA;AAA9B,C;;;AAIC,EAAA,KAAK,EAAC;;;8BACP,mBAAA,CAAuC,MAAvC,EAAuC;AAAjC,EAAA,KAAK,EAAC;AAA2B,CAAvC,EAAwB,UAAxB,EAAgC,CAAA;AAAA;AAAhC,C;;;AAMH,EAAA,KAAK,EAAC;;;8BACP,mBAAA,CAA+D,IAA/D,EAA+D;AAA3D,EAAA,KAAK,EAAC;AAAqD,CAA/D,EAAkD,UAAlD,EAA0D,CAAA;AAAA;AAA1D,C;;;AAEK,EAAA,KAAK,EAAC;;;+BACP,mBAAA,CAAqC,MAArC,EAAqC;AAA/B,EAAA,KAAK,EAAC;AAAyB,CAArC,EAAwB,QAAxB,EAA8B,CAAA;AAAA;AAA9B,C;;;AAIC,EAAA,KAAK,EAAC;;;+BACP,mBAAA,CAAuC,MAAvC,EAAuC;AAAjC,EAAA,KAAK,EAAC;AAA2B,CAAvC,EAAwB,UAAxB,EAAgC,CAAA;AAAA;AAAhC,C;;;uBA3BZ,mBAAA,CAgCM,KAhCN,EAAA,UAAA,EAgCM,CA9BF,mBAAA,CAAA,SAAA,CA8BE,EA7BF,mBAAA,CAYM,KAZN,EAAA,UAAA,EAYM,CAXF,UAWE,EATF,mBAAA,CAGM,KAHN,EAAA,UAAA,EAGM,CAFF,UAEE,E,iBAFmC,MACrC,gBAAA,CAAG,QAAA,CAAA,gBAAA,CAAiB,MAAA,CAAA,KAAA,CAAM,YAAvB,CAAH,C,EAAsC;AAAA;GACpC,CAHN,CASE,EAJF,mBAAA,CAGM,KAHN,EAAA,UAAA,EAGM,CAFF,UAEE,E,iBAFqC,MACvC,gBAAA,CAAG,QAAA,CAAA,gBAAA,CAAiB,MAAA,CAAA,KAAA,CAAM,cAAvB,CAAH,C,EAAwC;AAAA;GACtC,CAHN,CAIE,CAZN,CA6BE,EAfF,mBAAA,CAAA,SAAA,CAeE,EAdF,mBAAA,CAYM,KAZN,EAAA,UAAA,EAYM,CAXF,UAWE,EATF,mBAAA,CAGM,KAHN,EAAA,WAAA,EAGM,CAFF,WAEE,E,iBAFmC,MACrC,gBAAA,CAAG,QAAA,CAAA,gBAAA,CAAiB,MAAA,CAAA,KAAA,CAAM,SAAvB,CAAH,C,EAAmC;AAAA;GACjC,CAHN,CASE,EAJF,mBAAA,CAGM,KAHN,EAAA,WAAA,EAGM,CAFF,WAEE,E,iBAFqC,MACvC,gBAAA,CAAG,QAAA,CAAA,gBAAA,CAAiB,MAAA,CAAA,KAAA,CAAM,WAAvB,CAAH,C,EAAqC;AAAA;GACnC,CAHN,CAIE,CAZN,CAcE,CAhCN,C","sourcesContent":["<template>\n    <div class=\"grid md:grid-cols-2 gap-4\">\n\n        <!-- BOX 1 -->\n        <div class=\"shadow-md bg-indigo-200 p-10 text-center rounded-xl\">\n            <h3 class=\"text-3xl text-blue-900 font-bold mb-4\"> Cases </h3>\n\n            <div class=\"text-2xl mb-4\">\n                <span class=\"font-bold\"> New: </span>\n                {{ numberWithCommas(stats.NewConfirmed) }}\n            </div>\n\n            <div class=\"text-2xl mb-4\">\n                <span class=\"font-bold\"> Total: </span>\n                {{ numberWithCommas(stats.TotalConfirmed) }}\n            </div>\n        </div>\n\n        <!-- BOX 2 -->\n        <div class=\"shadow-md bg-indigo-300 p-10 text-center rounded-xl\">\n            <h3 class=\"text-3xl text-blue-900 font-bold mb-4\"> Deaths </h3>\n\n            <div class=\"text-2xl mb-4\">\n                <span class=\"font-bold\"> New: </span>\n                {{ numberWithCommas(stats.NewDeaths) }}\n            </div>\n\n            <div class=\"text-2xl mb-4 \">\n                <span class=\"font-bold\"> Total: </span>\n                {{ numberWithCommas(stats.TotalDeaths) }}\n            </div>\n        </div>\n\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'DataBoxes',\n    props: ['stats'],\n    methods: {\n        numberWithCommas(x) {\n            return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n        }\n    }\n}\n</script>"],"sourceRoot":""}]}