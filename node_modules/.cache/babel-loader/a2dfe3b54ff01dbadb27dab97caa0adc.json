{"remainingRequest":"/Users/jakub/Desktop/Dev/covid-tracker/node_modules/babel-loader/lib/index.js!/Users/jakub/Desktop/Dev/covid-tracker/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/jakub/Desktop/Dev/covid-tracker/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jakub/Desktop/Dev/covid-tracker/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/jakub/Desktop/Dev/covid-tracker/src/views/Home.vue?vue&type=template&id=fae5bece","dependencies":[{"path":"/Users/jakub/Desktop/Dev/covid-tracker/src/views/Home.vue","mtime":1633889933725},{"path":"/Users/jakub/Desktop/Dev/covid-tracker/node_modules/cache-loader/dist/cjs.js","mtime":1633879594556},{"path":"/Users/jakub/Desktop/Dev/covid-tracker/node_modules/babel-loader/lib/index.js","mtime":1633879594566},{"path":"/Users/jakub/Desktop/Dev/covid-tracker/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1633879604047},{"path":"/Users/jakub/Desktop/Dev/covid-tracker/node_modules/cache-loader/dist/cjs.js","mtime":1633879594556},{"path":"/Users/jakub/Desktop/Dev/covid-tracker/node_modules/vue-loader-v16/dist/index.js","mtime":1633879604047}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCBhcyBfcmVzb2x2ZUNvbXBvbmVudCwgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2ssIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCBjcmVhdGVFbGVtZW50Vk5vZGUgYXMgX2NyZWF0ZUVsZW1lbnRWTm9kZSB9IGZyb20gInZ1ZSI7CnZhciBfaG9pc3RlZF8xID0gewogIGtleTogMAp9Owp2YXIgX2hvaXN0ZWRfMiA9IHsKICBrZXk6IDEsCiAgY2xhc3M6ICJmbGV4IGZsZXgtY29sIGFsaWduLWNlbnRlciBqdXN0aWZ5LWNlbnRlciB0ZXh0LWNlbnRlciIKfTsKCnZhciBfaG9pc3RlZF8zID0gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICBjbGFzczogInRleHQtZ3JheS01MDAgdGV4dC0zeGwgbXQtMTAgbWItNiIKfSwgIiBGZXRjaGluZyBEYXRhICIsIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF80ID0gWyJzcmMiXTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICB2YXIgX2NvbXBvbmVudF9EYXRhVGl0bGUgPSBfcmVzb2x2ZUNvbXBvbmVudCgiRGF0YVRpdGxlIik7CgogIHZhciBfY29tcG9uZW50X0NvdW50cnlTZWxlY3QgPSBfcmVzb2x2ZUNvbXBvbmVudCgiQ291bnRyeVNlbGVjdCIpOwoKICB2YXIgX2NvbXBvbmVudF9EYXRhQm94ZXMgPSBfcmVzb2x2ZUNvbXBvbmVudCgiRGF0YUJveGVzIik7CgogIHJldHVybiAhJGRhdGEubG9hZGluZyA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soIm1haW4iLCBfaG9pc3RlZF8xLCBbX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfRGF0YVRpdGxlLCB7CiAgICB0ZXh0OiAkZGF0YS50aXRsZSwKICAgIGRhdGFEYXRlOiAkZGF0YS5kYXRhRGF0ZQogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJ0ZXh0IiwgImRhdGFEYXRlIl0pLCBfY3JlYXRlVk5vZGUoX2NvbXBvbmVudF9Db3VudHJ5U2VsZWN0LCB7CiAgICBvbkdldENvdW50cnk6ICRvcHRpb25zLmdldENvdW50cnlEYXRhLAogICAgY291bnRyaWVzOiAkZGF0YS5jb3VudHJpZXMKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsib25HZXRDb3VudHJ5IiwgImNvdW50cmllcyJdKSwgX2NyZWF0ZVZOb2RlKF9jb21wb25lbnRfRGF0YUJveGVzLCB7CiAgICBzdGF0czogX2N0eC5zdGF0cwogIH0sIG51bGwsIDgKICAvKiBQUk9QUyAqLwogICwgWyJzdGF0cyJdKSwgX2N0eC5zdGF0cy5Db3VudHJ5ID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiYnV0dG9uIiwgewogICAga2V5OiAwLAogICAgb25DbGljazogX2NhY2hlWzBdIHx8IChfY2FjaGVbMF0gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAkb3B0aW9ucy5jbGVhckNvdW50cnlEYXRhICYmICRvcHRpb25zLmNsZWFyQ291bnRyeURhdGEuYXBwbHkoJG9wdGlvbnMsIGFyZ3VtZW50cyk7CiAgICB9KSwKICAgIGNsYXNzOiAicm91bmRlZC1sZyBiZy1pbmRpZ28tNjAwIHRleHQtd2hpdGUgcHgtNCBweS0zIGZvbnQtc2VtaWJvbGQgdGV4dC1sZyBsZWFkaW5nLXRpZ2h0IHNoYWRvdy1tZCBob3ZlcjpiZy1pbmRpZ28tNzAwIHRyYW5zaXRpb24gZHVyYXRpb24tMTUwIgogIH0sICIgQ2xlYXIgQ291bnRyeSAiKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSldKSkgOiAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJtYWluIiwgX2hvaXN0ZWRfMiwgW19ob2lzdGVkXzMsIF9jcmVhdGVFbGVtZW50Vk5vZGUoImltZyIsIHsKICAgIHNyYzogJGRhdGEubG9hZGluZ0ltYWdlLAogICAgYWx0OiAiIiwKICAgIGNsYXNzOiAidy0yNCBtLWF1dG8iCiAgfSwgbnVsbCwgOAogIC8qIFBST1BTICovCiAgLCBfaG9pc3RlZF80KV0pKTsKfQ=="},{"version":3,"sources":["/Users/jakub/Desktop/Dev/covid-tracker/src/views/Home.vue"],"names":[],"mappings":";;;;;;AAWQ,EAAA,KAAK,EAAC;;;8BACV,mBAAA,CAEM,KAFN,EAEM;AAFD,EAAA,KAAK,EAAC;AAEL,CAFN,EAA+C,iBAA/C,EAEA,CAAA;AAAA;AAFA,C;;;;;;;;;;UAXW,KAAA,CAAA,O,kBAAb,mBAAA,CAQO,MARP,EAQO,UARP,EAQO,CAPL,YAAA,CAA+C,oBAA/C,EAA+C;AAAnC,IAAA,IAAI,EAAE,KAAA,CAAA,KAA6B;AAArB,IAAA,QAAQ,EAAE,KAAA,CAAA;AAAW,GAA/C,E,IAAA,E;;AAAA,I,oBAAA,CAOK,EALL,YAAA,CAAsE,wBAAtE,EAAsE;AAAtD,IAAA,YAAW,EAAE,QAAA,CAAA,cAAyC;AAAxB,IAAA,SAAS,EAAE,KAAA,CAAA;AAAa,GAAtE,E,IAAA,E;;AAAA,I,6BAAA,CAKK,EAHL,YAAA,CAA4B,oBAA5B,EAA4B;AAAhB,IAAA,KAAK,EAAE,IAAA,CAAA;AAAS,GAA5B,EAAwB,IAAxB,EAAwB;AAAA;AAAxB,IAAwB,CAAA,OAAA,CAAxB,CAGK,EADmC,IAAA,CAAA,KAAA,CAAM,O,kBAA9C,mBAAA,CAA+N,QAA/N,EAA+N;UAAA;AAAtN,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,QAAA,CAAA,gBAAA,IAAA,QAAA,CAAA,gBAAA,OAAA,QAAA,YAAF;AAAA,KAAA,CAAiN;AAAxK,IAAA,KAAK,EAAC;AAAkK,GAA/N,EAAuM,iBAAvM,C,qCACK,CARP,C,mBAUA,mBAAA,CAKO,MALP,EAAA,UAAA,EAKO,CAJL,UAIK,EADL,mBAAA,CAAsD,KAAtD,EAAsD;AAAhD,IAAA,GAAG,EAAE,KAAA,CAAA,YAA2C;AAA7B,IAAA,GAAG,EAAC,EAAyB;AAAtB,IAAA,KAAK,EAAC;AAAgB,GAAtD,E,IAAA,E;;AAAA,I,UAAA,CACK,CALP,C","sourcesContent":["<template>\n  <main v-if=\"!loading\">\n    <DataTitle :text=\"title\" :dataDate=\"dataDate\"/>\n\n    <CountrySelect @get-country=\"getCountryData\" :countries=\"countries\" />\n\n    <DataBoxes :stats=\"stats\" />\n\n    <button @click=\"clearCountryData\" v-if=\"stats.Country\" class=\"rounded-lg bg-indigo-600 text-white px-4 py-3 font-semibold text-lg leading-tight shadow-md hover:bg-indigo-700 transition duration-150\"> Clear Country </button>\n  </main>\n\n  <main class=\"flex flex-col align-center justify-center text-center\" v-else>\n    <div class=\"text-gray-500 text-3xl mt-10 mb-6\">\n      Fetching Data\n    </div>\n    <img :src=\"loadingImage\" alt=\"\" class=\"w-24 m-auto\" />\n  </main>\n\n</template>\n\n<script>\nimport DataTitle from '@/components/DataTitle'\nimport DataBoxes from '@/components/DataBoxes'\nimport CountrySelect from '@/components/CountrySelect'\n\nexport default {\n  name: 'Home',\n  components: {\n    DataTitle,\n    DataBoxes,\n    CountrySelect\n  },\n  data() {\n    return {\n      loading: true,\n      title: 'Global',\n      dataDate: '',\n      status: {},\n      countries: [],\n      loadingImage: require('../assets/loading.gif'),\n    }\n  },\n  methods: {\n    async fetchCovidData() {\n      const res = await fetch('https://api.covid19api.com/summary')\n      const data = await res.json()\n\n      return data\n    },\n    getCountryData(country) {\n      this.stats = country\n      this.title = country.Country\n    },\n    async clearCountryData() {\n      this.loading = true\n      const data = await this.fetchCovidData()\n      this.title = 'Global'\n      this.stats = data.Global\n      this.loading = false\n    }\n  },\n  async created() {\n    const data = await this.fetchCovidData()\n\n    this.dataDate = data.Date\n    this.stats = data.Global\n    this.countries = data.Countries\n    this.loading = false\n  }\n}\n</script>\n"],"sourceRoot":""}]}